using Telegram.Bot.Types.ReplyMarkups;
using PostgreSQL;

namespace Bot_Keyboards
{
    class Keyboards
    {
        public static InlineKeyboardMarkup InputToncoinKb= new(new []
        {
            new []
            {
                InlineKeyboardButton.WithCallbackData(text: "‚Ü™Ô∏è –í–≤–µ—Å—Ç–∏ TON –∫–æ—à–µ–ª—ë–∫", callbackData: "input_toncoin_wallet"),
            },
        });

        public static InlineKeyboardMarkup NewToncoinWalletKb= new(new []
        {
            new []
            {
                InlineKeyboardButton.WithCallbackData(text: "‚Ü™Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å TON –∫–æ—à–µ–ª—ë–∫", callbackData: "input_toncoin_wallet"),
            },
        });

        public static InlineKeyboardMarkup BuyNftKb= new(new []
        {
            new []
            {
                InlineKeyboardButton.WithCallbackData(text: "üí≥ –ö—É–ø–∏—Ç—å NFT", callbackData: "buy_nft"),
            },
        });

        public static ReplyKeyboardMarkup MenuKb = new(new []
        {
            new KeyboardButton[] {"üíé –ö—É–ø–∏—Ç—å NFT", "üôä –ú–æ–∏ NFT"},
            new KeyboardButton[] {"üíº –ú–æ–π –ö–æ—à–µ–ª–µ–∫", "‚ùì –ü–æ–º–æ—â—å"},
        })
        {
            ResizeKeyboard = true,
        };

        public static InlineKeyboardMarkup InfoKb = new(new []
        {
            new []
            {
                InlineKeyboardButton.WithUrl(text: "üí≠ –ß–∞—Ç –ø—Ä–µ—Å–µ–π–ª–∞", url: "https://t.me/+zT2Fgh0M_hc4YmNk"),
            }
        });

        public static InlineKeyboardMarkup PaymentKb(long chatId)
        {
            string paymentLink = $"ton://transfer/{UserDB.GetTONWallet()}?amount={UserDB.GetAllInfo(chatId)[2]}000000000&text={UserDB.GetAllInfo(chatId)[3]}";
            InlineKeyboardMarkup paymentKb = new(new []
            {
                new[]
                {
                    InlineKeyboardButton.WithUrl(text: "–û–ø–ª–∞—Ç–∏—Ç—å", url: $"{paymentLink}"),
                },
                new []
                {
                    InlineKeyboardButton.WithCallbackData(text: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callbackData: "check_payment"),
                },
                new []
                {
                    InlineKeyboardButton.WithCallbackData(text: "‚öôÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å", callbackData: "cancel_payment"),
                },
            });
            return paymentKb;
        }

        public static InlineKeyboardMarkup CheckPaymentKb(long chatId)
        {
            string paymentLink = $"ton://transfer/{UserDB.GetTONWallet()}?amount={UserDB.GetAllInfo(chatId)[2]}000000000&text={UserDB.GetAllInfo(chatId)[3]}";
            InlineKeyboardMarkup checkPaymentKb = new(new []
            {
                new[]
                {
                    InlineKeyboardButton.WithUrl(text: "–û–ø–ª–∞—Ç–∏—Ç—å", url: $"{paymentLink}"),
                },
                new []
                {
                    InlineKeyboardButton.WithCallbackData(text: "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è...", callbackData: "3223"),
                },
                new []
                {
                    InlineKeyboardButton.WithCallbackData(text: "‚öôÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å", callbackData: "cancel_payment"),
                },
            });
            return checkPaymentKb;
        }
    }
}
